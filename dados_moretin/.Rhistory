x <- c(1,2,3,4,5)
mean(x)
sd(x0)
sd(x)
load(url("http://s3.amazonaws.com/assets.datacamp.com/course/dasi/nc.Rdata"))
names(nc)
summary(nc)
summary(nc$gained)
boxplot(nc$gained)
plot(nc$gained)
boxplot(nc$gained)
summary(nc$gained)
gained_clean = na.omit(nc$gained)
gained_clean
n = length(gained_cleaan)
n = length(gained_clean)
n
boot)means <- rep(NA,100)
boot_means <- rep(NA,100)
hist(boot_meaans)
boot_means <- rep(NA,100)
for (i in 1:100){
# realizo amostras de tamanho n (neste caso 973) da prÃ³pria
# amostra
boot_samp <- sample(gained_clean, size=n, replace=T)
# realizo o processo 100 vezes e coloco dentro do vetor
# boot_means definido fora do "for"
boot_means[i] <- mean(boot_samp)
}
hist(boot_meaans)
hist(boot_means)
summary(nc$gained)
summary(boot_means)
load(url(http://assets.datacamp.com/course/dasi/inference.Rdata))
load(url(http://assets.datacamp.com/course/dasi/inference.Rdata))
inference(nc$gained, type = "ci", method="simulation",
load(url("http://assets.datacamp.com/course/dasi/inference.Rdata"))
inference(nc$gained, type = "ci", method="simulation",
conflevel=0.9, est ="mean",boot_method="perc")
?inference
inf <- inference(nc$gained, type = "ci", method="simulation",
conflevel=0.9, est ="mean",boot_method="perc")
summary(inf)
ls(inf)
infr
inf
inf <- inference(nc$gained, type = "ci", method="simulation",
conflevel=0.9, est ="mean",boot_method="perc")
load(url("http://assets.datacamp.com/course/dasi/inference.Rdata"))
inf <- inference(nc$gained, type = "ci", method="simulation",
conflevel=0.9, est ="mean",boot_method="perc")
inf <- inference(nc$gained, type = "ci", method="simulation",
conflevel=0.95, est ="mean",boot_method="perc")
inf <- inference(nc$gained, type = "ci", method="simulation",
conflevel=0.95, est ="mean",boot_method="se")
conflevel=0.95, est ="median",boot_method="se")
# boot_method = {perc, se} ### Whats de difference?
inference(nc$gained, type = "ci", method="simulation",
conflevel=0.95, est ="median",boot_method="se")
t.test(nc$gained)
inference(nc$gained, type = "ci", method="simulation",
inference(nc$gained, type = "ci", method="simulation",
conflevel=0.95, est ="mean",boot_method="se")
inference(nc$fage, type="ci", method="simulation", conflevel=0.95,
est="mean", boot_method="se")
plot(nc$weight ~ nc$habit)
plot(nc$weight ~ nc$habi)
by(nc$gained,, nc$habit, median)
by(nc$gained, nc$habit, median)
by(nc$weight, nc$habit, median)
by(nc$weight, nc$habit, length)
inference(y=nc$weight, x=nc$habit, est= "mean", type="ht", null=0
alternative="twosided", method = "theoretical")
inference(y=nc$weight, x=nc$habit, est= "mean", type="ht", null=0,
alternative="twosided", method = "theoretical")
inference(y=nc$weight, x=nc$habit, est= "mean", type="ht", null=0,
alternative="twosided", method = "theoretical")
# Mudando a ordem
inference(y=nc$weight, x=nc$habit, est= "mean", type="ht", null=0,
alternative="twosided", method = "theoretical",
order = c("smoker","nonsmoker"))
inference(y=nc$weight, x=nc$habit, est= "mean", type="ci", null=0,
alternative="twosided", method = "theoretical",
order = c("smoker","nonsmoker"))
load(url("http://s3.amazonaws.com/assets.datacamp.com/course/dasi/gss.Rdata")))
load(url("http://s3.amazonaws.com/assets.datacamp.com/course/dasi/gss.Rdata"))
head(gss)
head(gss)
load(url("http://s3.amazonaws.com/assets.datacamp.com/course/dasi/gss.Rdata"))
load(url("http://s3.amazonaws.com/assets.datacamp.com/course/dasi/gss.Rdata"))
head(gss)
summary(gss$wordsum)
summary(gss$class)
hist(gss$wordsum)
boxplot(gss$wordsum)
by(gss$wordsum, gss$class, mean)
plot(gss$wordsum ~ gss$class)
inference(y= gss$wordsum, x= gss$class, est = "mean", method = "theoretical",
type="ht", alternative="greater")
inference(y= gss$wordsum, x= gss$class, est = "mean", method = "theoretical",
type="ht", alternative="greater")
inference(y= gss$wordsum, x= gss$class, est = "mean", method = "theoretical",
conflevel=0.95, type="ht", alternative="greater")
inference(y = gss$wordsum, x = gss$class,
est = "mean", method = "theoretical",
type = "ht", alternative = "greater")
inference(y = gss$wordsum, x = gss$class,
est = "mean", method = "theoretical",
type = "ht", alternative = "greater")
require(xlsx)
Energ <- read.xlsx("ENERGIA.xls",sheetName="Plan1")
setwd("C:\\Users\\Euler\\Documents\\GitHub\\time series\\dados_moretin")
Energ <- read.xlsx("ENERGIA.xls",sheetName="Plan1")
Energ.ts <- ts(Energ[,3], start=c(1968,1), end=c(1979,9),frequency=12)
plot(Energ.ts)
require(stats)
Energ1 <- window(Energ.ts,start=c(1,1977),end=c(12,1977))
Energ.ts <- ts(Energ[,3], start=c(1968,1), end=c(1979,9),frequency=12)
plot(Energ.ts)
require(stats)
Energ1 <- window(Energ.ts,start=c(1,1977),end=c(12,1977))
Energ1 <- window(Energ.ts, start=c(1977,1), end=c(1978,12))
Energ1
seq(1:3)
t <- seq(1:24)
tendencia <- lm(Energ1 ~ t)
abline(tendencia)
Energ1
t <- seq(1:24)
plot(Energ1)
abline(tendencia)
Energ2 <- Energ1/1000
t <- seq(1:24)
tendencia <- lm(Energ2 ~ t)
tendencia
plot(Energ2)
summary(tendencia)
plot(tendencia)
plot(tendencia)
plot(Energ2)
abline(tendencia)
fcast <- forecast(tendencia,h=4))
fcast <- forecast(tendencia,h=4)
?forecast
predict(tendencia)
require(forecast)
fcast <- forecast(tendencia,h=4)
?forecast
fcast <- forecast(tendencia,h=4, level=c(80,95))
t <- seq(25,28)
nd <- seq(25,28)
t <- seq(1:24)
fcast <- forecast(tendencia,h=4, level=c(80,95), newdata=nd)
fcast
plot(fcast)
fcast <- forecast(tendencia, h=4, level=c(80,95), newdata=nd)
fcast
summary
summary(tendencia)
?lapply
teste(nd)
teste <- function(x){
z <- 68.438+4.242*x
z
}
teste(nd)

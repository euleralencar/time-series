x <- c(1,2,3,4,5)
mean(x)
sd(x0)
sd(x)
load(url("http://s3.amazonaws.com/assets.datacamp.com/course/dasi/nc.Rdata"))
names(nc)
summary(nc)
summary(nc$gained)
boxplot(nc$gained)
plot(nc$gained)
boxplot(nc$gained)
summary(nc$gained)
gained_clean = na.omit(nc$gained)
gained_clean
n = length(gained_cleaan)
n = length(gained_clean)
n
boot)means <- rep(NA,100)
boot_means <- rep(NA,100)
hist(boot_meaans)
boot_means <- rep(NA,100)
for (i in 1:100){
# realizo amostras de tamanho n (neste caso 973) da própria
# amostra
boot_samp <- sample(gained_clean, size=n, replace=T)
# realizo o processo 100 vezes e coloco dentro do vetor
# boot_means definido fora do "for"
boot_means[i] <- mean(boot_samp)
}
hist(boot_meaans)
hist(boot_means)
summary(nc$gained)
summary(boot_means)
load(url(http://assets.datacamp.com/course/dasi/inference.Rdata))
load(url(http://assets.datacamp.com/course/dasi/inference.Rdata))
inference(nc$gained, type = "ci", method="simulation",
load(url("http://assets.datacamp.com/course/dasi/inference.Rdata"))
inference(nc$gained, type = "ci", method="simulation",
conflevel=0.9, est ="mean",boot_method="perc")
?inference
inf <- inference(nc$gained, type = "ci", method="simulation",
conflevel=0.9, est ="mean",boot_method="perc")
summary(inf)
ls(inf)
infr
inf
inf <- inference(nc$gained, type = "ci", method="simulation",
conflevel=0.9, est ="mean",boot_method="perc")
load(url("http://assets.datacamp.com/course/dasi/inference.Rdata"))
inf <- inference(nc$gained, type = "ci", method="simulation",
conflevel=0.9, est ="mean",boot_method="perc")
inf <- inference(nc$gained, type = "ci", method="simulation",
conflevel=0.95, est ="mean",boot_method="perc")
inf <- inference(nc$gained, type = "ci", method="simulation",
conflevel=0.95, est ="mean",boot_method="se")
conflevel=0.95, est ="median",boot_method="se")
# boot_method = {perc, se} ### Whats de difference?
inference(nc$gained, type = "ci", method="simulation",
conflevel=0.95, est ="median",boot_method="se")
t.test(nc$gained)
inference(nc$gained, type = "ci", method="simulation",
inference(nc$gained, type = "ci", method="simulation",
conflevel=0.95, est ="mean",boot_method="se")
inference(nc$fage, type="ci", method="simulation", conflevel=0.95,
est="mean", boot_method="se")
plot(nc$weight ~ nc$habit)
plot(nc$weight ~ nc$habi)
by(nc$gained,, nc$habit, median)
by(nc$gained, nc$habit, median)
by(nc$weight, nc$habit, median)
by(nc$weight, nc$habit, length)
inference(y=nc$weight, x=nc$habit, est= "mean", type="ht", null=0
alternative="twosided", method = "theoretical")
inference(y=nc$weight, x=nc$habit, est= "mean", type="ht", null=0,
alternative="twosided", method = "theoretical")
inference(y=nc$weight, x=nc$habit, est= "mean", type="ht", null=0,
alternative="twosided", method = "theoretical")
# Mudando a ordem
inference(y=nc$weight, x=nc$habit, est= "mean", type="ht", null=0,
alternative="twosided", method = "theoretical",
order = c("smoker","nonsmoker"))
inference(y=nc$weight, x=nc$habit, est= "mean", type="ci", null=0,
alternative="twosided", method = "theoretical",
order = c("smoker","nonsmoker"))
load(url("http://s3.amazonaws.com/assets.datacamp.com/course/dasi/gss.Rdata")))
load(url("http://s3.amazonaws.com/assets.datacamp.com/course/dasi/gss.Rdata"))
head(gss)
head(gss)
load(url("http://s3.amazonaws.com/assets.datacamp.com/course/dasi/gss.Rdata"))
load(url("http://s3.amazonaws.com/assets.datacamp.com/course/dasi/gss.Rdata"))
head(gss)
summary(gss$wordsum)
summary(gss$class)
hist(gss$wordsum)
boxplot(gss$wordsum)
by(gss$wordsum, gss$class, mean)
plot(gss$wordsum ~ gss$class)
inference(y= gss$wordsum, x= gss$class, est = "mean", method = "theoretical",
type="ht", alternative="greater")
inference(y= gss$wordsum, x= gss$class, est = "mean", method = "theoretical",
type="ht", alternative="greater")
inference(y= gss$wordsum, x= gss$class, est = "mean", method = "theoretical",
conflevel=0.95, type="ht", alternative="greater")
inference(y = gss$wordsum, x = gss$class,
est = "mean", method = "theoretical",
type = "ht", alternative = "greater")
inference(y = gss$wordsum, x = gss$class,
est = "mean", method = "theoretical",
type = "ht", alternative = "greater")
install.packages("TTR")
require(TTR)
kingstimeseries
kingstimeseries
kings <- scan("http://robjhyndman.com/tsdldata/misc/kings.dat",skip=3)
kings
plot(kingtimeseries)
kingstimeseries <- ts(kings)
plot(kingtimeseries)
plot(kingstimeseries)
plot(kingstimeseries)
kingstimeseriesSMA3 <- SMA(kingstimeseries,n=3)
lines(kingstimeseriesSMA3)
lines(kingstimeseriesSMA3,col=3)
lines(kingstimeseriesSMA3,col=2)
plot.ts(kingstimeseries)
kingstimeseriesSMA3 <- SMA(kingstimeseries,n=3)
lines(kingstimeseriesSMA3,col=2)
kingstimeseriesSMA8 <- SMA(kingstimeseries,n=8)
lines(kingstimeseriesSMA8,col=4)
births <- scan("http://robjhyndman.com/tsdldata/data/nybirths.dat")
birthstimeseries <- ts(births, frequency=12, start=c(1946,1))
souvenir <- scan("http://robjhyndman.com/tsdldata/data/fancy.dat")
souvenirtimeseries <- ts(souvenir, frequency=12, start=c(1987,1))
plot.ts(birthstimeseries)
birthstimeseriescomponents <- decompose(birthstimeseries)
birthstimeseriescomponents <- decompose(birthstimeseries)
birthstimeseriescomponents
plot(birthstimeseriescomponents)
#Retirando efeito sazonal da série
birthstimeseriesseasonallyadjusted <- birthstimeseries - birthstimeseriescomponents$seasonal
plot(birthstimeseriesseasonallyadjusted)
plot(birthstimeseries)
lines(birthstimeseriesseasonallyadjusted)
plot(birthstimeseries)
lines(birthstimeseriesseasonallyadjusted,col=2)
birthstimeseriesseasonallyadjusted2 <- birthstimeseriesseasonallyadjusted - birthstimeseriescomponents$trend
birthstimeseriesseasonallyadjusted2 <- birthstimeseriesseasonallyadjusted - birthstimeseriescomponents$trend
plot(birthstimeseries)
lines(birthstimeseriesseasonallyadjusted2,col=2)
birthstimeseriesseasonallyadjusted2 <- birthstimeseriesseasonallyadjusted - birthstimeseriescomponents$trend
plot(birthstimeseries)
lines(birthstimeseriesseasonallyadjusted2,col=2)
birthstimeseriesseasonallyadjusted2 <- birthstimeseries - birthstimeseriescomponents$seasonal - birthstimeseriescomponents$trend
plot(birthstimeseries)
lines(birthstimeseriesseasonallyadjusted2,col=2)
birthstimeseriesseasonallyadjusted2 <- birthstimeseries - birthstimeseriescomponents$seasonal - birthstimeseriescomponents$trend
plot(birthstimeseries)
lines(birthstimeseriesseasonallyadjusted2,col=2)
plot(birthstimeseriesseasonallyadjusted2,col=2)
rain <- scan("http://robjhyndman.com/tsdldata/hurst/precip1.dat",skip=1)
rainseries <- ts(rain,start=c(1813))
plot.ts(rainseries)
rainseriesforecasts <- HoltWinters(rainseries, beta=FALSE, gamma=FALSE)
rainseriesforecasts
lines(rainseriesforecasts)
plot(rainseries)
lines(rainseriesforecasts)
plot(rainseriesforecasts)
HoltWinters(rainseries, beta=FALSE, gamma=FALSE, l.start=23.56)
library("forecast")
rainseriesforecasts2 <- forecast.HoltWinters(rainseriesforecasts, h=8)
plot.forecast(rainseriesforecasts2)
rainseriesforecasts2
acf(rainseriesforecasts2$residuals, lag.max=20)
rainseriesforecasts2
Box.test(rainseriesforecasts2$residuals, lag=20, type="Ljung-Box")
plot.ts(rainseriesforecasts2$residuals)
plot.ts(rainseriesforecasts2$residuals)
poluicao <- read.xlsx("ENERGIA.xls",sheetName="Plan1")
poluicao <- read.xlsx("ENERGIA.xls",sheetName="Plan1")
require(xlsx)
poluicao <- read.xlsx("ENERGIA.xls",sheetName="Plan1")
poluicao <- read.xlsx("poluicao.xls",sheetName="Plan1")
setwd("C:\\Users\\Euler\\Documents\\GitHub\\time series\\dados_moretin")
poluicao <- read.xlsx("poluicao.xls",sheetName="Plan1")
head(poluicao)
tail(poulicao)
tail(poluicao)
?ts
no2 <- ts(poluicao[,7],start=c(1997,01,01),end=c(1997,12,31))
head(no2)
plot(no2)
no2 <- ts(poluicao[,7],start=c(1997,01),
end=c(1997,12),frequency=365)
plot(no2)
no2 <- ts(poluicao[,7],start=1997, frequency=365)
plot(no2)
rainseriesforecasts<-HoltWinters(no2, beta=FALSE, gamma=FALSE) #Estimação dos parametros do modelo
no2adjust <-HoltWinters(no2, beta=FALSE, gamma=FALSE) #Estimação dos parametros do modelo
require(forecast)
no2forecast <-forecast.HoltWinters(no2forecast, h=5) # Previsão para os próximos 8 anos
no2forecast <-forecast.HoltWinters(no2adjust, h=5) # Previsão para os próximos 8 anos
no2adjust
no2forecast
plot(no2ajust)
plot(no2adjust)
no2forecast <-forecast.HoltWinters(no2adjust, h=5)
plot.forecast(no2forecast)
window(no2,start=c(1997,01,01),end=c(1997,04,30))
?window
plot(no2)
window(no2,frequency=31+28+31+30)
window(no2,frequency=(31+28+31+30)
window(no2,frequency=(31+28+31+30))
?window
window(no2,1997.1,1997.4)
31+28+31+30
no2abril <- window(no2,1997.1,1997.4)
plot(no2abril)
no2abril <- window(no2,1997.0,1997.5)
plot(no2abril)
no2adjust <-HoltWinters(no2abril, beta=FALSE, gamma=FALSE)
no2forecast <-forecast.HoltWinters(no2adjust, h=5)
plot(no2adjust)
plot.forecast(no2forecast)
no2forecast
no2abril
no2abril <- window(no2,start=c(1997,1),end=c(1997,(30+28+31+30)))
plot(no2abril)
no2adjust <-HoltWinters(no2abril, beta=FALSE, gamma=FALSE)
#require(forecast)
no2forecast <-forecast.HoltWinters(no2adjust, h=5)
plot(no2adjust)
plot.forecast(no2forecast)
no2forecast
no2forecast <-forecast.HoltWinters(no2adjust, h=10)
no2forecast
30+28+31+30
no2adjust <-HoltWinters(no2abril, alpha=0.5502,beta=FALSE, gamma=FALSE)
#require(forecast)
no2forecast <-forecast.HoltWinters(no2adjus, h=10)
no2forecast <-forecast.HoltWinters(no2adjust, h=10)
no2forecast <-forecast.HoltWinters(no2adjust, h=10)
no2forecast
no2adjust
no2forecast <-forecast.HoltWinters(no2adjust, alpha=0.5502, h=10)
no2forecast
no2abril <- window(no2,start=c(1997,1),end=c(1997,120))
plot(no2abril)
no2adjust <-HoltWinters(no2abril, alpha=0.5502,beta=FALSE, gamma=FALSE)
#require(forecast)
no2forecast <-forecast.HoltWinters(no2adjust, alpha=0.5502, h=10)
plot(no2adjust)
plot.forecast(no2forecast)
no2forecast
no2abril <- window(no2,start=c(1997,1),end=c(1997,121))
no2adjust <-HoltWinters(no2abril, alpha=0.5502,beta=FALSE, gamma=FALSE)
no2forecast <-forecast.HoltWinters(no2adjust, alpha=0.5502, h=1)
no2forecast
no2abril <- window(no2,start=c(1997,1),end=c(1997,110))
no2adjust <-HoltWinters(no2abril, alpha=0.5502,beta=FALSE, gamma=FALSE)
no2forecast <-forecast.HoltWinters(no2adjust, alpha=0.5502, h=1)
no2forecast
tail(no2abril)
no2abril <- window(no2,start=c(1997,1),end=c(1997,111))
tail(no2abril)
no2abril <- window(no2,start=c(1997,1),end=c(1997,110))
no2adjust <-HoltWinters(no2abril, alpha=0.5502,beta=FALSE, gamma=FALSE)
no2forecast <-forecast.HoltWinters(no2adjust, alpha=0.5502, h=1)
no2forecast
